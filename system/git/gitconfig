[user]
	name        = Gilbert F. Sewovoe-Ekoue
	email       = gilberts55@hotmail.com
[color "branch"]
  current = green bold
  local = green
  remote = yellow
[color "diff"]
  meta = yellow
[color "status"]
  added = green reverse
  changed = yellow reverse
  untracked = red reverse
[alias]
  aliases     = config --get-regexp alias
  st          = status
  cheddar     = commit --amend -CHEAD
  ci          = commit
  co          = checkout
  cp          = cherry-pick
  put         = push origin HEAD
  fixup       = commit --fixup
  cm          = commit
  ls          = ls-files
  b           = branch -vvv
  r           = remote -v
  p           = push
  d           = diff -- . ':!*package-lock.json' ':!*yarn.lock'
  dc          = diff --cached -- . ':!*package-lock.json' ':!*yarn.lock'
  undo        = reset --soft HEAD^
  unstage     = reset HEAD --
  track       = !git branch --set-upstream-to=origin/`git symbolic-ref --short HEAD`
  publish     = "!git push -u origin $(git branch-name)"

  # Squash last N commits together
  # Usage: git squash N
  squash        = "!f(){ git reset --soft HEAD~${1} && git commit --edit -m\"$(git log --format=%B --reverse HEAD..HEAD@{1})\"; };f"
  pruneremote   = remote prune origin
  lg            = "log --format='%Cgreen%h %Cred%cr %Creset%s %Cblue%cn'"
  today         = log --stat --since='1 Day Ago' --graph --pretty=oneline --abbrev-commit --date=relative
  find          = !sh -c 'git ls-files | grep --color=always -i "$@" | less -FRSX' -
  tree          = log --pretty=format:'%C(auto)%h%d%Creset %s  %C(auto,bold blue)%an%Creset %C(auto,green)(%ar)%Creset' --graph --all
  add-untracked = !"git status --porcelain | awk '/\\?\\?/{ print $2 }' | xargs git add"
  snapshot      = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}"
  last          = log -1 HEAD
  stash-all     = stash save --include-untracked
  files-changed = "!f() { git --no-pager diff --name-only `git merge-base origin/master @`..@; }; f"
  file-diff     = "!f() { git diff `git merge-base origin/master @` -- $1; }; f"
  branch-name   = "!git rev-parse --abbrev-ref HEAD"
  cleanup       = "!git branch --merged | egrep  -v '\\*|master|prod|staging' | xargs -n 1 git branch -d"
  # Display what changed between the current branch and the master branch
  branch-diff   = "!git diff master $(git branch-name)"

  # Merge GitHub pull request on top of current branch or the specified branch.
  #   $ git copr 1234          # gets and switches to pr/1234 from origin
  #   $ git copr 789 otherguy  # gets and switches to pr/789 from otherguy remote
  # from https://gist.github.com/gnarf/5406589
  copr = "!f() { git fetch -fu ${2:-origin} refs/pull/$1/head:pr/$1 && \
               git checkout pr/$1; }; f"

  # Merge pull request e.g: git mpr 123 or git mpr 123 master
  mpr = "!f() { \
        declare currentBranch=\"$(git symbolic-ref --short HEAD)\"; \
        declare branch=\"${2:-$currentBranch}\"; \
        if [ $(printf \"%s\" \"$1\" | grep '^[0-9]\\+$' > /dev/null; printf $?) -eq 0 ]; then \
            git fetch origin refs/pull/$1/head:pr/$1 && \
            git checkout -B $branch && \
            git rebase $branch pr/$1 && \
            git checkout -B $branch && \
            git merge --ff-only pr/$1 && \
            git branch -D pr/$1; \
        fi \
    }; f"

  # Delete merged local branches e.g: git bclean <master>
  bclean = "!f() { git branch --merged ${1-master} | grep -v " ${1-master}$" | xargs -t git branch -d; }; f"

  # Delete a branch here and on the origin.
  brdel = "!f() { : git checkout ; git branch -D $@; git push origin --delete $@; }; f"

  # Temporarily ignore a file
  ignore    = update-index --assume-unchanged
  unignore  = update-index --no-assume-unchanged
  ignored   = !git ls-files -v | grep "^[[:lower:]]"
  contributors = shortlog --summary --numbered
[branch]
  autosetuprebase = always
  autosetupmerge  = true
[commit]
  verbose         = true
  template        = ~/dotfiles/config/git/git-message
[core]
  whitespace   = warn
  editor        = nvim
  excludesfile  = ~/dotfiles/config/git/gitignore
	pager = diff-so-fancy | less --tabs=4 -RFX
[mergetool "nvim"]
  cmd = nvim -f -c \"Gdiffsplit!\" \"$MERGED\"
[merge]
  tool = nvim
  summary = true
[grep]
	lineNumber      = true
  patternType     = extended
[push]
  default         = tracking
[diff]
  algorithm       = patience
[filter "lfs"]
	required        = true
	clean           = git-lfs clean -- %f
	smudge          = git-lfs smudge -- %f
	process         = git-lfs filter-process
[include]
  path            = ~/.gitconfig.local
[fetch]
  prune           = true
[github]
	user            = gilbertek
[hub]
  protocol        = https
[init]
	defaultBranch = main
