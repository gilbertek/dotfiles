# Common configuration.
require: rubocop-rails

AllCops:
  TargetRubyVersion: 2.5
  TargetRailsVersion: 5.2

Layout/ParameterAlignment:
  # Alignment of parameters in multi-line method calls.
  #
  # The `with_first_parameter` style aligns the following lines along the same
  # column as the first parameter.
  #
  #     method_call(a,
  #                 b)
  #
  # The `with_fixed_indentation` style aligns the following lines with one
  # level of indentation relative to the start of the line with the method call.
  #
  #     method_call(a,
  #       b)
  EnforcedStyle: with_first_parameter
  SupportedStyles:
    - with_first_parameter
    - with_fixed_indentation

# Use ` or %x around command literals.
Style/CommandLiteral:
  EnforcedStyle: mixed
  # backticks: Always use backticks.
  # percent_x: Always use %x.
  # mixed: Use backticks on single-line commands, and %x on multi-line commands.
  SupportedStyles:
    - backticks
    - percent_x
    - mixed
  # If false, the cop will always recommend using %x if one or more backticks
  # are found in the command string.
  AllowInnerBackticks: false

# Use / or %r around regular expressions.
Style/RegexpLiteral:
  EnforcedStyle: slashes
  # slashes: Always use slashes.
  # percent_r: Always use %r.
  # mixed: Use slashes on single-line regexes, and %r on multi-line regexes.
  SupportedStyles:
    - slashes
    - percent_r
    - mixed
  # If false, the cop will always recommend using %r if one or more slashes
  # are found in the regexp string.
  AllowInnerSlashes: false

Layout/SpaceAroundEqualsInParameterDefault:
  EnforcedStyle: space
  SupportedStyles:
    - space
    - no_space

Layout/TrailingEmptyLines:
  EnforcedStyle: final_newline
  SupportedStyles:
    - final_newline
    - final_blank_line

# Empty lines around class / module can make a file look excessively
# sparse, but they make it easier to navigate efficiently with Vim
Layout/EmptyLinesAroundBlockBody:
  EnforcedStyle: no_empty_lines
  SupportedStyles:
    - empty_lines
    - no_empty_lines

Layout/EmptyLinesAroundClassBody:
  EnforcedStyle: no_empty_lines
  SupportedStyles:
    - empty_lines
    - no_empty_lines

Layout/EmptyLinesAroundModuleBody:
  EnforcedStyle: no_empty_lines

Style/AsciiComments:
  Enabled: false

Documentation:
      Enabled: false

StringLiterals:
  EnforcedStyle: double_quotes

Style/TrailingCommaInArrayLiteral:
  # If `comma`, the cop requires a comma after the last item, but only when each
  # item is on its own line.
  # If `consistent_comma`, the cop requires a comma after the last item
  # SupportedStyles:
  #   - comma
  #   - consistent_comma
  #   - no_comma
  EnforcedStyleForMultiline: comma

Style/TrailingCommaInHashLiteral:
  EnforcedStyleForMultiline: comma

# Favor modifier if/unless usage when you have a
# single-line body.
Style/IfUnlessModifier:
  Enabled: false

Style/StringLiteralsInInterpolation:
  EnforcedStyle: double_quotes
  SupportedStyles:
    - single_quotes
    - double_quotes

Layout/MultilineMethodCallIndentation:
  EnforcedStyle: indented

Layout/SpaceInsideHashLiteralBraces:
  EnforcedStyle: space

Layout/SpaceInLambdaLiteral:
  EnforcedStyle: require_space

Metrics/BlockLength:
  CountComments: false
  Max: 25
  ExcludedMethods: ['describe', 'context', 'it']

Style/TrailingCommaInArguments:
  EnforcedStyleForMultiline: 'comma'
