#!/usr/bin/env bash
# Set default channel
# rustup default <stable> | <nightly>

RUST_VERSION=1.42.0

asdf install rust $RUST_VERSION
asdf global rust $RUST_VERSION

rustup self update
rustup update

rustup component add rls
rustup component add rust-src
rustup component add rust-analysis

# Racer - code completion for Rust use nightly
cargo uninstall racer 2> /dev/null
rustup toolchain add nightly
rustup component add rls --toolchain nightly
cargo +nightly install racer

# Generate a new Rust project by leveraging a pre-existing git repository as a template.
cargo install cargo-generate

# WebAssembly
# cargo install wasm-pack
# cargo install wasm-gc

# Built in http server
# cargo install https

# Enable tab completion for Bash MACOS
if [[ $OSTYPE == "darwin"* ]]; then
  if [[ -f $(brew --prefix)/etc/bash_completion.d/rustup.bash-completion ]]; then
    rustup completions bash > $(brew --prefix)/etc/bash_completion.d/rustup.bash-completion
  fi

# Enable tab completion for Bash LINUX
elif [[ -f ~/.local/share/bash-completion/completions/rustup ]]; then
  echo "Need to install completion for Linux"
  rustup completions bash > ~/.local/share/bash-completion/completions/rustup
fi

asdf reshim rust

# Test racer on the command line:
racer complete std::io::B
