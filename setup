
#!/usr/bin/env bash

# Install dotfiles symlinks.
set -e

msg() {
  printf '%b\n' "$1" >&2
}

success() {
  if [ "$ret" -eq '0' ]; then
    msg "\\033[32m[âœ”]\\033[0m ${1}${2}"
  fi
}

warning(){
  msg "\033[33mWarning:\033[0m ${1}${2}"
}

mkdir_path() {
  echo "==> creating path : $1"
  mkdir -p "$1"
}

DOTFILES="$HOME/dotfiles"

_FILES=(
  bash_profile
  bashrc
  aliases
  functions
  railsrc
  tmux.conf
  tmux-osx.conf
  tmux-linux.conf
  editorconfig
  tern-project
  prettierrc
  eslintrc
  # .pryrc
  # .tigrc
  # .rubocop.yml
)

echo -e "\nCreating dotfile symlinks"

create_symlinks() {
  for file in ${_FILES[@]}; do
    filename=".$(basename $file '.symlink')"
    target="$HOME/$filename"

    if [ -e $target ]; then
      echo "$filename already exists... Skipping."
      # warning "${filename} alreadly exists in your home directory. Are you sure to overwrite it? ([y]/n)"
      # read -r -n 1;
      # msg ""
      # if [[ ! $REPLY ]] || [[ $REPLY =~ ^[Yy]$ ]]; then
      #   ln -snf $DOTFILES/system/$file $target
      # fi
    else
      ln -snf $DOTFILES/system/$file $target
    fi
  done
}


# neovim and vim config
echo -e "\nCreating config symlinks"
if [ ! -d $HOME/.config ]; then
  mkdir -p $HOME/.config/{nvim,git}
fi

# for config in $DOTFILES/config/*; do
#   filename="$(basename $config)"
#   target="$HOME/.config/$filename"

#   if [ -e $target ]; then
#     echo "$target already exists... Skipping."
#   else
#     echo "Creating symlink for $config"
#     # ln -s $config $target
#   fi
# done

ln -sfn "$DOTFILES/config/nvim/init.vim" ~/.config/nvim/init.vim

# Git and Hub config
mkdir -p ~/.config/git
ln -sfn "$DOTFILES/config/git/gitconfig" ~/.gitconfig

create_symlinks

ret="$?"
success "Dotfiles have been configured! Done! ðŸ¤˜"
