#!/usr/bin/env bash

# Install dotfiles symlinks.
set -e

DOTFILES="$HOME/dotfiles"

msg() {
  printf '%b\n' "$1" >&2
}

success() {
  if [ "$ret" -eq '0' ]; then
    msg "\\033[32m[âœ”]\\033[0m ${1}${2}"
  fi
}

warning(){
  msg "\033[33mWarning:\033[0m ${1}${2}"
}

bkp(){
  if [ -e "$1" ];then
    rm -rf "$2"
    mv "$1" "$2"
  fi
}

_FILES=(
  editorconfig
  prettierrc
  eslintrc
  ctags
  tool-versions
  bashrc
  bash_profile
  profile
)

echo -e "\nCreating dotfile symlinks"

# Setup bash.d directory
if [ ! -d "$HOME/.bash.d" ]; then
  mkdir -p "$HOME/.bash.d"
fi

if [ ! -d "$HOME/bin" ]; then
  mkdir -p "$HOME/bin"
fi

if [ ! -d "$HOME/.emacs.d" ]; then
  mkdir -p "$HOME/.emacs.d"
fi

# bashes config
create_bash_links() {
  for f in "${DOTFILES}"/system/bash.d/*; do
    ln -sfn  "$f"  ~/.bash.d
  done
}

create_tool_links() {
  for file in "${_FILES[@]}"; do
    filename=".$(basename $file '.symlink')"
    target="$HOME/$filename"

    if [ -e "$target" ] && [ ! -d "$target" ]; then
      warning "${filename} alreadly exists in your home directory. Are you sure to overwrite it? ([y]/n)"
      read -r -n 1;
      msg ""
      if [[ ! $REPLY ]] || [[ $REPLY =~ ^[Yy]$ ]]; then
        ln -snf "${DOTFILES}/system/${file}" "${target}"
      fi
    else
      ln -snf "${DOTFILES}/system/${file}" "${target}"
    fi
  done
}

create_bin_links() {
  for file in "$DOTFILES"/bin/*; do
    name="$(basename ${file%%.*})"
    target="$HOME/bin/$name"

    cp -n "$file" "$target"
    chmod +x "$target"
  done
}

create_ruby_links() {
  for f in "${DOTFILES}"/system/ruby/*; do
    filename=".$(basename ${f})"
    ln -sfn  "$f"  "$HOME/$filename"
  done
}

# Config
echo -e "\nCreating config symlinks"
mkdir -p ~/.config
mkdir -p ~/dotfiles_backup/config

for d in "${DOTFILES}"/config/* ; do
  filename=$(echo "$d" | rev | cut -d"/" -f 1 | rev)
  echo "${filename}"

  bkp ~/.config/"$filename" ~/dotfiles_backup/config
  ln -s "$d" ~/.config/
done

# Local shared
echo -e "\nCreating .local/share symlinks"
mkdir -p ~/.local/share
mkdir -p ~/dotfiles_backup/local/share
for d in "${DOTFILES}"/local/share/* ; do
  filename=$(echo "$d" | rev | cut -d"/" -f 1 | rev)
  echo "$filename"
  # bkp ~/.local/share/"$filename" ~/dotfiles_backup/local/share
  # ln -s "$d" ~/.local/share
done

# Applications
# echo -e "\nCreating .local/share/application symlinks"
# mkdir -p ~/.local/share/applications
# mkdir -p ~/dotfiles_backup/local/share/applications
# for d in "${DOTFILES}"/local/share/applications/* ; do
#   filename=$(echo "$d" | rev | cut -d"/" -f 1 | rev)
#   echo "$filename"
#   # bkp ~/.local/share/applications/"$filename" ~/dotfiles_backup/local/share/applications
#   # ln -s "$d" ~/.local/share/applications/
# done

# Emacs Cofig
ln -sfn "$DOTFILES/system/emacs/init.el" "$HOME/.emacs.d/init.el"

# Git and Hub config
ln -sfn "$DOTFILES/system/git/gitconfig" ~/.gitconfig

# mkdir -p ~/.sbt/1.3.10/plugins
# ln -s "$DOTFILES/system/scala/sbtplugins.sbt" ~/.sbt/1.3.10/plugins/dotfileplugins.sbt

if [ ! -f "$HOME/.cargo/config" ]; then
	mkdir -p ~/.cargo && ln -sfn "$DOTFILES/config/cargo/config" "$HOME/.cargo/config"
fi

create_bash_links
create_tool_links
create_bin_links
create_ruby_links
rm -rf ~/dotfiles_backup

ret="$?"
success "Dotfiles have been configured! ðŸ¤˜"
