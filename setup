
#!/usr/bin/env bash

# Install dotfiles symlinks.
set -e

msg() {
  printf '%b\n' "$1" >&2
}

success() {
  if [ "$ret" -eq '0' ]; then
    msg "\\033[32m[âœ”]\\033[0m ${1}${2}"
  fi
}

warning(){
  msg "\033[33mWarning:\033[0m ${1}${2}"
}

mkdir_path() {
  echo "==> creating path : $1"
  mkdir -p "$1"
}

DOTFILES="$HOME/dotfiles"

_FILES=(
  bash_profile
  bashrc
  aliases
  functions
  railsrc
  tmux.conf
  tmux-osx.conf
  tmux-linux.conf
  editorconfig
  prettierrc
  eslintrc
  ctags
  pryrc
  # tern-project
  # .tigrc
  # .rubocop.yml
)

echo -e "\nCreating dotfile symlinks"

create_symlinks() {
  for file in ${_FILES[@]}; do
    filename=".$(basename $file '.symlink')"
    target="$HOME/$filename"

    if [ -e $target ]; then
      warning "$filename already exists... \t\tSkipping."
      warning "${filename} alreadly exists in your home directory. Are you sure to overwrite it? ([y]/n)"
      read -r -n 1;
      msg ""
      if [[ ! $REPLY ]] || [[ $REPLY =~ ^[Yy]$ ]]; then
        ln -sf $DOTFILES/system/$file $target
      fi
    else
      ln -snf $DOTFILES/system/$file $target
    fi
  done
}

create_bin_symlinks() {
  for file in $DOTFILES/bin/*; do
    name="$(basename ${file%%.*})"
    target="$HOME/bin/$name"

    cp -n $file $target
    chmod +x $target
  done
}

# neovim and vim config
echo -e "\nCreating config symlinks"
if [ ! -d $HOME/.config ]; then
  mkdir -p $HOME/.config/{nvim,git}
fi

ln -sfn "$DOTFILES/config/nvim/init.vim" ~/.config/nvim/init.vim
ln -sfn "${DOTFILES}/config/nvim/coc-settings.json" ~/.config/nvim/coc-settings.json

# Git and Hub config
if [ ! -d $HOME/.config/git ]; then
  mkdir -p ~/.config/git
fi
ln -sfn "$DOTFILES/config/git/gitconfig" ~/.gitconfig

if [ ! -d $HOME/bin ]; then
  mkdir -p $HOME/bin
fi

create_symlinks
create_bin_symlinks

ret="$?"
success "Dotfiles have been configured! ðŸ¤˜"
